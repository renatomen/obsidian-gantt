name: CI

on:
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint --if-present
      - name: Typecheck
        run: npm run typecheck --if-present
      - name: Check BDD changes
        id: bdd-changes
        run: |
          if npm run detect:bdd-changes; then
            echo "bdd-changed=true" >> $GITHUB_OUTPUT
          else
            echo "bdd-changed=false" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true
      - name: Validate BDD files
        if: steps.bdd-changes.outputs.bdd-changed == 'true'
        run: npm run validate:bdd
      - name: Unit tests
        run: npm test --if-present
      - name: Build
        run: npm run build

  bdd-validation:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for change detection
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Check BDD changes
        id: bdd-changes
        run: |
          if npm run detect:bdd-changes; then
            echo "bdd-changed=true" >> $GITHUB_OUTPUT
            echo "✅ BDD changes detected, will run validation"
          else
            echo "bdd-changed=false" >> $GITHUB_OUTPUT
            echo "⏭️ No BDD changes detected, skipping validation"
          fi
        continue-on-error: true
      - name: Validate BDD syntax
        if: steps.bdd-changes.outputs.bdd-changed == 'true'
        run: npm run validate:bdd
      - name: Validate semantic tags
        if: steps.bdd-changes.outputs.bdd-changed == 'true'
        run: npm run tags validate $(find features -name "*.feature" -exec grep -l "@" {} \; | head -5 | xargs grep -ho "@[a-zA-Z0-9-]*" | sort -u | tr '\n' ',' | sed 's/,$//')
        continue-on-error: true
      - name: Upload BDD validation results
        if: steps.bdd-changes.outputs.bdd-changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: bdd-validation-results
          path: |
            features/**/*.feature
            .bdd/semantic-tags.yaml
            scripts/*bdd*.mjs

  e2e:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Prepare temp vault path
        shell: pwsh
        run: |
          $vault = "$Env:RUNNER_TEMP\\vault"
          echo "OBSIDIAN_TEST_VAULT=$vault" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          New-Item -ItemType Directory -Force -Path $vault | Out-Null
      - name: Build plugin
        run: npm run build
      - name: Install plugin into temp vault
        run: node scripts/install-to-vault.cjs
      - name: Run E2E tests (WDIO)
        run: npm run e2e
      - name: Upload E2E artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-artifacts
          path: |
            .wdio-*
            test-results
            **/wdio-*.log
